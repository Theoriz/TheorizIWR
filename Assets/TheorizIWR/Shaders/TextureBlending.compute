// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Blender

Texture2D<float4> MaskTexture;

Texture2D<float4> InputTex0;

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

StructuredBuffer<int> TextureArray;

int TextureWidth;
int TextureHeight;

[numthreads(8,8,1)]
void Blender (uint3 id : SV_DispatchThreadID)
{
	//Result[id.xy] = InputTex0[id.xy] * MaskTexture[id.xy];

	int color = TextureArray[int(MaskTexture[id.xy].r * 200) * TextureWidth * TextureHeight + id.x + id.y * TextureWidth];
	float r = (color & 255) / 255.0;
	float g = ((color & 65280) >> 8) / 255.0;
	float b = ((color & 16711680) >> 16) / 255.0;
	Result[id.xy] = float4(r, g, b, 1.0);
}

