// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel AugmentaToTexture

float Radius;

int PointsCount;
int TextureWidth;
int TextureHeight;


StructuredBuffer<float4> AugmentaPoints;

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

[numthreads(8,8,1)]
void AugmentaToTexture(uint3 id : SV_DispatchThreadID)
{

	float4 color = float4(0, 0, 0, 1);
	float dist;

	for (int i = 0; i < PointsCount; i++) {

		dist = distance(AugmentaPoints[i].xy, float2((float)id.x / (float)TextureWidth, (float)id.y / (float)TextureHeight));

		if (dist < 0.1) {
			color += float4(1, 1, 1, 0);
		}

	}
	
	Result[id.xy] = saturate(color);
}
